$fn = 50;


difference() {
	union() {
		translate(v = [0, 100, 0]) {
			rotate(a = [180, 0, 0]) {
				difference() {
					union() {
						translate(v = [0, 0, -34.0000000000]) {
							cylinder(h = 68, r = 20.0000000000);
						}
						translate(v = [0, 0, 34.0000000000]) {
							cylinder(h = 4, r = 27.0000000000);
						}
					}
					union() {
						translate(v = [8.0000000000, 15, 15]) {
							rotate(a = [0, 90, 0]) {
								difference() {
									union() {
										translate(v = [0, 0, -13.5000000000]) {
											rotate(a = [0, 0, 0]) {
												difference() {
													union() {
														#translate(v = [-1.7500000000, -3.2500000000, -150.3000000000]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, -150.6000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, 0]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														translate(v = [0, 0, -250]) {
															#linear_extrude(height = 250) {
																polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
															}
														}
														#translate(v = [-1.7500000000, -3.2500000000, -250.3000000000]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, -250.6000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, 0]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, -350.3000000000]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, -350.6000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, 0]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
													}
													union();
												}
											}
										}
										translate(v = [0, 0, -13.0000000000]) {
											rotate(a = [0, 0, 0]) {
												difference() {
													union() {
														#translate(v = [-1.7500000000, -3.2500000000, -150.3000000000]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, -150.6000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, 0]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														translate(v = [0, 0, -250]) {
															#linear_extrude(height = 250) {
																polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
															}
														}
														#translate(v = [-1.7500000000, -3.2500000000, -250.3000000000]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, -250.6000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, 0]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, -350.3000000000]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, -350.6000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, 0]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
													}
													union();
												}
											}
										}
										translate(v = [0, 0, -13.5000000000]) {
											rotate(a = [0, 0, 0]) {
												difference() {
													union() {
														#translate(v = [-1.7500000000, -3.2500000000, -150.3000000000]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, -150.6000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, 0]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														translate(v = [0, 0, -250]) {
															#linear_extrude(height = 250) {
																polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
															}
														}
														#translate(v = [-1.7500000000, -3.2500000000, -250.3000000000]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, -250.6000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, 0]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, -350.3000000000]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, -350.6000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, 0]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
													}
													union();
												}
											}
										}
										#translate(v = [0, 0, -16.0000000000]) {
											cylinder(h = 16, r = 1.5000000000);
										}
										#translate(v = [0, 0, -1.9000000000]) {
											cylinder(h = 1.9000000000, r1 = 1.8000000000, r2 = 3.6000000000);
										}
										#cylinder(h = 50, r = 3.6000000000);
										#translate(v = [0, 0, -16.0000000000]) {
											cylinder(h = 16, r = 1.8000000000);
										}
										#translate(v = [0, 0, -16.0000000000]) {
											cylinder(h = 16, r = 1.5000000000);
										}
									}
									union();
								}
							}
						}
						translate(v = [8.0000000000, 15, -15]) {
							rotate(a = [0, 90, 0]) {
								difference() {
									union() {
										translate(v = [0, 0, -13.5000000000]) {
											rotate(a = [0, 0, 0]) {
												difference() {
													union() {
														#translate(v = [-1.7500000000, -3.2500000000, -150.3000000000]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, -150.6000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, 0]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														translate(v = [0, 0, -250]) {
															#linear_extrude(height = 250) {
																polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
															}
														}
														#translate(v = [-1.7500000000, -3.2500000000, -250.3000000000]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, -250.6000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, 0]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, -350.3000000000]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, -350.6000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, 0]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
													}
													union();
												}
											}
										}
										translate(v = [0, 0, -13.0000000000]) {
											rotate(a = [0, 0, 0]) {
												difference() {
													union() {
														#translate(v = [-1.7500000000, -3.2500000000, -150.3000000000]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, -150.6000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, 0]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														translate(v = [0, 0, -250]) {
															#linear_extrude(height = 250) {
																polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
															}
														}
														#translate(v = [-1.7500000000, -3.2500000000, -250.3000000000]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, -250.6000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, 0]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, -350.3000000000]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, -350.6000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, 0]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
													}
													union();
												}
											}
										}
										translate(v = [0, 0, -13.5000000000]) {
											rotate(a = [0, 0, 0]) {
												difference() {
													union() {
														#translate(v = [-1.7500000000, -3.2500000000, -150.3000000000]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, -150.6000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, 0]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														translate(v = [0, 0, -250]) {
															#linear_extrude(height = 250) {
																polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
															}
														}
														#translate(v = [-1.7500000000, -3.2500000000, -250.3000000000]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, -250.6000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, 0]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, -350.3000000000]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, -350.6000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, 0]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
													}
													union();
												}
											}
										}
										#translate(v = [0, 0, -16.0000000000]) {
											cylinder(h = 16, r = 1.5000000000);
										}
										#translate(v = [0, 0, -1.9000000000]) {
											cylinder(h = 1.9000000000, r1 = 1.8000000000, r2 = 3.6000000000);
										}
										#cylinder(h = 50, r = 3.6000000000);
										#translate(v = [0, 0, -16.0000000000]) {
											cylinder(h = 16, r = 1.8000000000);
										}
										#translate(v = [0, 0, -16.0000000000]) {
											cylinder(h = 16, r = 1.5000000000);
										}
									}
									union();
								}
							}
						}
						translate(v = [8.0000000000, -15, 15]) {
							rotate(a = [0, 90, 0]) {
								difference() {
									union() {
										translate(v = [0, 0, -13.5000000000]) {
											rotate(a = [0, 0, 0]) {
												difference() {
													union() {
														#translate(v = [-1.7500000000, -3.2500000000, -150.3000000000]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, -150.6000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, 0]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														translate(v = [0, 0, -250]) {
															#linear_extrude(height = 250) {
																polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
															}
														}
														#translate(v = [-1.7500000000, -3.2500000000, -250.3000000000]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, -250.6000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, 0]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, -350.3000000000]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, -350.6000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, 0]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
													}
													union();
												}
											}
										}
										translate(v = [0, 0, -13.0000000000]) {
											rotate(a = [0, 0, 0]) {
												difference() {
													union() {
														#translate(v = [-1.7500000000, -3.2500000000, -150.3000000000]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, -150.6000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, 0]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														translate(v = [0, 0, -250]) {
															#linear_extrude(height = 250) {
																polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
															}
														}
														#translate(v = [-1.7500000000, -3.2500000000, -250.3000000000]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, -250.6000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, 0]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, -350.3000000000]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, -350.6000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, 0]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
													}
													union();
												}
											}
										}
										translate(v = [0, 0, -13.5000000000]) {
											rotate(a = [0, 0, 0]) {
												difference() {
													union() {
														#translate(v = [-1.7500000000, -3.2500000000, -150.3000000000]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, -150.6000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, 0]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														translate(v = [0, 0, -250]) {
															#linear_extrude(height = 250) {
																polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
															}
														}
														#translate(v = [-1.7500000000, -3.2500000000, -250.3000000000]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, -250.6000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, 0]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, -350.3000000000]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, -350.6000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, 0]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
													}
													union();
												}
											}
										}
										#translate(v = [0, 0, -16.0000000000]) {
											cylinder(h = 16, r = 1.5000000000);
										}
										#translate(v = [0, 0, -1.9000000000]) {
											cylinder(h = 1.9000000000, r1 = 1.8000000000, r2 = 3.6000000000);
										}
										#cylinder(h = 50, r = 3.6000000000);
										#translate(v = [0, 0, -16.0000000000]) {
											cylinder(h = 16, r = 1.8000000000);
										}
										#translate(v = [0, 0, -16.0000000000]) {
											cylinder(h = 16, r = 1.5000000000);
										}
									}
									union();
								}
							}
						}
						translate(v = [8.0000000000, -15, -15]) {
							rotate(a = [0, 90, 0]) {
								difference() {
									union() {
										translate(v = [0, 0, -13.5000000000]) {
											rotate(a = [0, 0, 0]) {
												difference() {
													union() {
														#translate(v = [-1.7500000000, -3.2500000000, -150.3000000000]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, -150.6000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, 0]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														translate(v = [0, 0, -250]) {
															#linear_extrude(height = 250) {
																polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
															}
														}
														#translate(v = [-1.7500000000, -3.2500000000, -250.3000000000]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, -250.6000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, 0]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, -350.3000000000]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, -350.6000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, 0]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
													}
													union();
												}
											}
										}
										translate(v = [0, 0, -13.0000000000]) {
											rotate(a = [0, 0, 0]) {
												difference() {
													union() {
														#translate(v = [-1.7500000000, -3.2500000000, -150.3000000000]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, -150.6000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, 0]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														translate(v = [0, 0, -250]) {
															#linear_extrude(height = 250) {
																polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
															}
														}
														#translate(v = [-1.7500000000, -3.2500000000, -250.3000000000]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, -250.6000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, 0]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, -350.3000000000]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, -350.6000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, 0]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
													}
													union();
												}
											}
										}
										translate(v = [0, 0, -13.5000000000]) {
											rotate(a = [0, 0, 0]) {
												difference() {
													union() {
														#translate(v = [-1.7500000000, -3.2500000000, -150.3000000000]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, -150.6000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, 0]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														translate(v = [0, 0, -250]) {
															#linear_extrude(height = 250) {
																polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
															}
														}
														#translate(v = [-1.7500000000, -3.2500000000, -250.3000000000]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, -250.6000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, 0]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, -350.3000000000]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, -350.6000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -3.2500000000, 0]) {
															cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
														}
														#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
															cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
														}
													}
													union();
												}
											}
										}
										#translate(v = [0, 0, -16.0000000000]) {
											cylinder(h = 16, r = 1.5000000000);
										}
										#translate(v = [0, 0, -1.9000000000]) {
											cylinder(h = 1.9000000000, r1 = 1.8000000000, r2 = 3.6000000000);
										}
										#cylinder(h = 50, r = 3.6000000000);
										#translate(v = [0, 0, -16.0000000000]) {
											cylinder(h = 16, r = 1.8000000000);
										}
										#translate(v = [0, 0, -16.0000000000]) {
											cylinder(h = 16, r = 1.5000000000);
										}
									}
									union();
								}
							}
						}
						translate(v = [0, 0, -34.0000000000]) {
							cylinder(h = 68, r = 8.5000000000);
						}
						translate(v = [0, 0, 34.0000000000]) {
							cylinder(h = 4, r = 15.0000000000);
						}
					}
				}
			}
		}
		translate(v = [0, 0, -34.0000000000]) {
			cylinder(h = 68, r = 20.0000000000);
		}
		translate(v = [0, 0, 34.0000000000]) {
			cylinder(h = 4, r = 27.0000000000);
		}
	}
	union() {
		translate(v = [8.0000000000, 15, 15]) {
			rotate(a = [0, 90, 0]) {
				difference() {
					union() {
						translate(v = [0, 0, -13.5000000000]) {
							rotate(a = [0, 0, 0]) {
								difference() {
									union() {
										#translate(v = [-1.7500000000, -3.2500000000, -150.3000000000]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, -150.6000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, 0]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										translate(v = [0, 0, -250]) {
											#linear_extrude(height = 250) {
												polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
											}
										}
										#translate(v = [-1.7500000000, -3.2500000000, -250.3000000000]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, -250.6000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, 0]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, -350.3000000000]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, -350.6000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, 0]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
									}
									union();
								}
							}
						}
						translate(v = [0, 0, -13.0000000000]) {
							rotate(a = [0, 0, 0]) {
								difference() {
									union() {
										#translate(v = [-1.7500000000, -3.2500000000, -150.3000000000]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, -150.6000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, 0]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										translate(v = [0, 0, -250]) {
											#linear_extrude(height = 250) {
												polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
											}
										}
										#translate(v = [-1.7500000000, -3.2500000000, -250.3000000000]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, -250.6000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, 0]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, -350.3000000000]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, -350.6000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, 0]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
									}
									union();
								}
							}
						}
						translate(v = [0, 0, -13.5000000000]) {
							rotate(a = [0, 0, 0]) {
								difference() {
									union() {
										#translate(v = [-1.7500000000, -3.2500000000, -150.3000000000]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, -150.6000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, 0]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										translate(v = [0, 0, -250]) {
											#linear_extrude(height = 250) {
												polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
											}
										}
										#translate(v = [-1.7500000000, -3.2500000000, -250.3000000000]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, -250.6000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, 0]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, -350.3000000000]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, -350.6000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, 0]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
									}
									union();
								}
							}
						}
						#translate(v = [0, 0, -16.0000000000]) {
							cylinder(h = 16, r = 1.5000000000);
						}
						#translate(v = [0, 0, -1.9000000000]) {
							cylinder(h = 1.9000000000, r1 = 1.8000000000, r2 = 3.6000000000);
						}
						#cylinder(h = 50, r = 3.6000000000);
						#translate(v = [0, 0, -16.0000000000]) {
							cylinder(h = 16, r = 1.8000000000);
						}
						#translate(v = [0, 0, -16.0000000000]) {
							cylinder(h = 16, r = 1.5000000000);
						}
					}
					union();
				}
			}
		}
		translate(v = [8.0000000000, 15, -15]) {
			rotate(a = [0, 90, 0]) {
				difference() {
					union() {
						translate(v = [0, 0, -13.5000000000]) {
							rotate(a = [0, 0, 0]) {
								difference() {
									union() {
										#translate(v = [-1.7500000000, -3.2500000000, -150.3000000000]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, -150.6000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, 0]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										translate(v = [0, 0, -250]) {
											#linear_extrude(height = 250) {
												polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
											}
										}
										#translate(v = [-1.7500000000, -3.2500000000, -250.3000000000]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, -250.6000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, 0]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, -350.3000000000]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, -350.6000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, 0]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
									}
									union();
								}
							}
						}
						translate(v = [0, 0, -13.0000000000]) {
							rotate(a = [0, 0, 0]) {
								difference() {
									union() {
										#translate(v = [-1.7500000000, -3.2500000000, -150.3000000000]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, -150.6000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, 0]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										translate(v = [0, 0, -250]) {
											#linear_extrude(height = 250) {
												polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
											}
										}
										#translate(v = [-1.7500000000, -3.2500000000, -250.3000000000]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, -250.6000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, 0]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, -350.3000000000]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, -350.6000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, 0]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
									}
									union();
								}
							}
						}
						translate(v = [0, 0, -13.5000000000]) {
							rotate(a = [0, 0, 0]) {
								difference() {
									union() {
										#translate(v = [-1.7500000000, -3.2500000000, -150.3000000000]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, -150.6000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, 0]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										translate(v = [0, 0, -250]) {
											#linear_extrude(height = 250) {
												polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
											}
										}
										#translate(v = [-1.7500000000, -3.2500000000, -250.3000000000]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, -250.6000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, 0]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, -350.3000000000]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, -350.6000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, 0]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
									}
									union();
								}
							}
						}
						#translate(v = [0, 0, -16.0000000000]) {
							cylinder(h = 16, r = 1.5000000000);
						}
						#translate(v = [0, 0, -1.9000000000]) {
							cylinder(h = 1.9000000000, r1 = 1.8000000000, r2 = 3.6000000000);
						}
						#cylinder(h = 50, r = 3.6000000000);
						#translate(v = [0, 0, -16.0000000000]) {
							cylinder(h = 16, r = 1.8000000000);
						}
						#translate(v = [0, 0, -16.0000000000]) {
							cylinder(h = 16, r = 1.5000000000);
						}
					}
					union();
				}
			}
		}
		translate(v = [8.0000000000, -15, 15]) {
			rotate(a = [0, 90, 0]) {
				difference() {
					union() {
						translate(v = [0, 0, -13.5000000000]) {
							rotate(a = [0, 0, 0]) {
								difference() {
									union() {
										#translate(v = [-1.7500000000, -3.2500000000, -150.3000000000]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, -150.6000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, 0]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										translate(v = [0, 0, -250]) {
											#linear_extrude(height = 250) {
												polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
											}
										}
										#translate(v = [-1.7500000000, -3.2500000000, -250.3000000000]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, -250.6000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, 0]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, -350.3000000000]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, -350.6000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, 0]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
									}
									union();
								}
							}
						}
						translate(v = [0, 0, -13.0000000000]) {
							rotate(a = [0, 0, 0]) {
								difference() {
									union() {
										#translate(v = [-1.7500000000, -3.2500000000, -150.3000000000]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, -150.6000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, 0]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										translate(v = [0, 0, -250]) {
											#linear_extrude(height = 250) {
												polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
											}
										}
										#translate(v = [-1.7500000000, -3.2500000000, -250.3000000000]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, -250.6000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, 0]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, -350.3000000000]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, -350.6000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, 0]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
									}
									union();
								}
							}
						}
						translate(v = [0, 0, -13.5000000000]) {
							rotate(a = [0, 0, 0]) {
								difference() {
									union() {
										#translate(v = [-1.7500000000, -3.2500000000, -150.3000000000]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, -150.6000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, 0]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										translate(v = [0, 0, -250]) {
											#linear_extrude(height = 250) {
												polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
											}
										}
										#translate(v = [-1.7500000000, -3.2500000000, -250.3000000000]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, -250.6000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, 0]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, -350.3000000000]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, -350.6000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, 0]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
									}
									union();
								}
							}
						}
						#translate(v = [0, 0, -16.0000000000]) {
							cylinder(h = 16, r = 1.5000000000);
						}
						#translate(v = [0, 0, -1.9000000000]) {
							cylinder(h = 1.9000000000, r1 = 1.8000000000, r2 = 3.6000000000);
						}
						#cylinder(h = 50, r = 3.6000000000);
						#translate(v = [0, 0, -16.0000000000]) {
							cylinder(h = 16, r = 1.8000000000);
						}
						#translate(v = [0, 0, -16.0000000000]) {
							cylinder(h = 16, r = 1.5000000000);
						}
					}
					union();
				}
			}
		}
		translate(v = [8.0000000000, -15, -15]) {
			rotate(a = [0, 90, 0]) {
				difference() {
					union() {
						translate(v = [0, 0, -13.5000000000]) {
							rotate(a = [0, 0, 0]) {
								difference() {
									union() {
										#translate(v = [-1.7500000000, -3.2500000000, -150.3000000000]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, -150.6000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, 0]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										translate(v = [0, 0, -250]) {
											#linear_extrude(height = 250) {
												polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
											}
										}
										#translate(v = [-1.7500000000, -3.2500000000, -250.3000000000]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, -250.6000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, 0]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, -350.3000000000]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, -350.6000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, 0]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
									}
									union();
								}
							}
						}
						translate(v = [0, 0, -13.0000000000]) {
							rotate(a = [0, 0, 0]) {
								difference() {
									union() {
										#translate(v = [-1.7500000000, -3.2500000000, -150.3000000000]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, -150.6000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, 0]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										translate(v = [0, 0, -250]) {
											#linear_extrude(height = 250) {
												polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
											}
										}
										#translate(v = [-1.7500000000, -3.2500000000, -250.3000000000]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, -250.6000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, 0]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, -350.3000000000]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, -350.6000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, 0]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
									}
									union();
								}
							}
						}
						translate(v = [0, 0, -13.5000000000]) {
							rotate(a = [0, 0, 0]) {
								difference() {
									union() {
										#translate(v = [-1.7500000000, -3.2500000000, -150.3000000000]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, -150.6000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, 0]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										translate(v = [0, 0, -250]) {
											#linear_extrude(height = 250) {
												polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
											}
										}
										#translate(v = [-1.7500000000, -3.2500000000, -250.3000000000]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, -250.6000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, 0]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, -350.3000000000]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, -350.6000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -3.2500000000, 0]) {
											cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
										}
										#translate(v = [-1.7500000000, -1.7500000000, 0.3000000000]) {
											cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
										}
									}
									union();
								}
							}
						}
						#translate(v = [0, 0, -16.0000000000]) {
							cylinder(h = 16, r = 1.5000000000);
						}
						#translate(v = [0, 0, -1.9000000000]) {
							cylinder(h = 1.9000000000, r1 = 1.8000000000, r2 = 3.6000000000);
						}
						#cylinder(h = 50, r = 3.6000000000);
						#translate(v = [0, 0, -16.0000000000]) {
							cylinder(h = 16, r = 1.8000000000);
						}
						#translate(v = [0, 0, -16.0000000000]) {
							cylinder(h = 16, r = 1.5000000000);
						}
					}
					union();
				}
			}
		}
		translate(v = [0, 0, -34.0000000000]) {
			cylinder(h = 68, r = 8.5000000000);
		}
		translate(v = [0, 0, 34.0000000000]) {
			cylinder(h = 4, r = 15.0000000000);
		}
		translate(v = [0, -250.0000000000, -250.0000000000]) {
			cube(size = [500, 500, 500]);
		}
		translate(v = [0, -250.0000000000, -250.0000000000]) {
			cube(size = [500, 500, 500]);
		}
		translate(v = [0, -250.0000000000, -250.0000000000]) {
			cube(size = [500, 500, 500]);
		}
	}
}